apiVersion: v1
data:
  sg_action_groups.yml: |
    UNLIMITED:
      - "*"

    ###### INDEX LEVEL ######

    INDICES_ALL:
      - "indices:*"

    # for backward compatibility
    ALL:
      - INDICES_ALL

    MANAGE:
      - "indices:monitor/*"
      - "indices:admin/*"

    CREATE_INDEX:
      - "indices:admin/create"
      - "indices:admin/mapping/put"

    MANAGE_ALIASES:
      - "indices:admin/aliases*"

    # for backward compatibility
    MONITOR:
      - INDICES_MONITOR

    INDICES_MONITOR:
      - "indices:monitor/*"

    DATA_ACCESS:
      - "indices:data/*"
      - CRUD

    WRITE:
      - "indices:data/write*"
      - "indices:admin/mapping/put"

    READ:
      - "indices:data/read*"
      - "indices:admin/mappings/fields/get*"

    DELETE:
      - "indices:data/write/delete*"

    CRUD:
      - READ
      - WRITE

    SEARCH:
      - "indices:data/read/search*"
      - "indices:data/read/msearch*"
      - SUGGEST

    SUGGEST:
      - "indices:data/read/suggest*"

    INDEX:
      - "indices:data/write/index*"
      - "indices:data/write/update*"
      - "indices:admin/mapping/put"
      - "indices:data/write/bulk*"

    GET:
      - "indices:data/read/get*"
      - "indices:data/read/mget*"

    ###### CLUSTER LEVEL ######

    CLUSTER_ALL:
      - "cluster:*"

    CLUSTER_MONITOR:
      - "cluster:monitor/*"

    CLUSTER_COMPOSITE_OPS_RO:
      - "indices:data/read/mget"
      - "indices:data/read/msearch"
      - "indices:data/read/mtv"
      - "indices:data/read/coordinate-msearch*"
      - "indices:admin/aliases/exists*"
      - "indices:admin/aliases/get*"

    CLUSTER_COMPOSITE_OPS:
      - "indices:data/write/bulk"
      - "indices:admin/aliases*"
      - CLUSTER_COMPOSITE_OPS_RO
  sg_config.yml: |
    searchguard:
      dynamic:
        http:
          anonymous_auth_enabled: false
        authc:
          basic_internal_auth_domain:
            enabled: true
            order: 4
            http_authenticator:
              type: basic
              challenge: true
            authentication_backend:
              type: intern
          proxy_auth_domain:
            enabled: false
            order: 3
            http_authenticator:
              type: proxy
              challenge: false
              config:
                user_header: "x-proxy-user"
                roles_header: "x-proxy-roles"
            authentication_backend:
              type: noop
          jwt_auth_domain:
            enabled: false
            order: 0
            http_authenticator:
              type: jwt
              challenge: false
              config:
                signing_key: "base64 encoded key"
                jwt_header: "Authorization"
                jwt_url_parameter: null
                roles_key: null
                subject_key: null
            authentication_backend:
              type: noop
          clientcert_auth_domain:
            enabled: false
            order: 2
            http_authenticator:
              type: clientcert
              config:
                username_attribute: cn #optional, if omitted DN becomes username
              challenge: false
            authentication_backend:
              type: noop
  sg_internal_users.yml: |
    # This is the internal user database
    # The hash value is a bcrypt hash and can be generated with plugin/tools/hash.sh
    admin:
      hash: $2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG
      #password is: admin
  sg_roles.yml: |
    sg_public:
      cluster:
        - cluster:monitor/main
        - CLUSTER_COMPOSITE_OPS_RO

    # Allows everything
    # but not changes to searchguard config/index
    sg_all_access:
      cluster:
        - UNLIMITED
      indices:
        '*':
          '*':
            - UNLIMITED
      tenants:
        adm_tenant: RW
        test_tenant_ro: RW

    # Read all and monitor, but no write permissions
    sg_readonly_and_monitor:
      cluster:
        - CLUSTER_MONITOR
        - CLUSTER_COMPOSITE_OPS_RO
      indices:
        '*':
          '*':
            - INDICES_ALL

    # Read all, but no write permissions
    sg_readall:
      cluster:
        - CLUSTER_COMPOSITE_OPS_RO
      indices:
        '*':
          '*':
            - READ

    # For users which use kibana
    sg_kibana:
      cluster:
        - CLUSTER_COMPOSITE_OPS_RO
      indices:
        '*':
          '*':
            - READ
        '?kibana':
          '*':
            - INDICES_ALL

    # For the kibana server
    sg_kibana_server:
      cluster:
          - CLUSTER_MONITOR
          - CLUSTER_COMPOSITE_OPS
      indices:
        '?kibana':
          '*':
            - INDICES_ALL

    # For logstash and beats
    sg_logstash:
      cluster:
        - indices:admin/template/get
        - indices:admin/template/put
        - CLUSTER_MONITOR
        - CLUSTER_COMPOSITE_OPS
      indices:
        'logstash-*':
          '*':
            - CRUD
            - CREATE_INDEX
        '*beat*':
          '*':
            - CRUD
            - CREATE_INDEX

    # Allows each user to access own named index
    sg_own_index:
      cluster:
        - CLUSTER_COMPOSITE_OPS
      indices:
        '${user_name}':
          '*':
            - INDICES_ALL
  sg_roles_mapping.yml: |
    # In this file users, backendroles and hosts can be mapped to search guard roles.
    # What a role is allowed to do you specify in sg_roles.yml

    sg_all_access:
      users:
        - admin

    sg_logstash:
      users:
        - logstash

    sg_kibana_server:
      users:
        - kibanaserver

    sg_kibana:
      users:
        - kibanaro

    sg_public:
      users:
        - '*'

    sg_readall:
      users:
        - readall

    sg_own_index:
      users:
        - '*'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: sgadmin-config
