apiVersion: v1
data:
  elasticsearch.yml: |
    cluster:
      name: ${CLUSTER_NAME}

    node:
      master: ${NODE_MASTER}
      data: ${NODE_DATA}
      name: ${NODE_NAME}
      ingest: ${NODE_INGEST}
      max_local_storage_nodes: ${MAX_LOCAL_STORAGE_NODES}

    network.host: 0.0.0.0

    gateway:
      recover_after_time: 5m

    path:
      data: /data/data
      logs: /data/log

    bootstrap:
      memory_lock: true

    http:
      enabled: ${HTTP_ENABLE}
      compression: true
      cors:
        enabled: ${HTTP_CORS_ENABLE}
        allow-origin: ${HTTP_CORS_ALLOW_ORIGIN}

    discovery:
      zen:
        ping.unicast.hosts: ${DISCOVERY_SERVICE}
        minimum_master_nodes: ${NUMBER_OF_MASTERS}

    {{- if eq .Values.Plugins "x-pack"}}
    xpack:
      graph.enabled: false
      ml.enabled: false
      security.enabled: false
      watcher.enabled: true
      watcher.enabled: false
    {{- end}}

    {{- if eq .Values.SearchGuard.Enabled true}}
    searchguard:
      ssl:
        transport:
          enabled_protocols: "TLSv1.2"
          keystore_filepath: keystore-transport.jks
          keystore_alias: ${NODE_NAME_PREFIX}-${K8_STATEFULSET_ID}
          keystore_password: ${TRANSPORT_TLS_KEY_PASS}
          truststore_filepath: truststore-transport.jks
          truststore_password: ${TRANSPORT_TLS_KEY_PASS}
          enforce_hostname_verification: false
        http:
          enabled: ${HTTP_ENABLE}
          enabled_protocols: "TLSv1.2"
          clientauth_mode: OPTIONAL
          keystore_filepath: keystore-https.jks
          keystore_alias: ${NODE_NAME_PREFIX}-${K8_STATEFULSET_ID}
          keystore_password: ${HTTPS_TLS_KEY_PASS}
          truststore_filepath: truststore-https.jks
          truststore_password: ${HTTPS_TLS_KEY_PASS}
    {{- end}}
  log4j2.properties: |
    status = error

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
  jvm.options: |
    ## JVM configuration

    ################################################################
    ## IMPORTANT: JVM heap size
    ################################################################
    ##
    ## You should always set the min and max JVM heap
    ## size to the same value. For example, to set
    ## the heap to 4 GB, set:
    ##
    ## -Xms4g
    ## -Xmx4g
    ##
    ## See https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html
    ## for more information
    ##
    ################################################################

    # Xms represents the initial size of total heap space
    # Xmx represents the maximum size of total heap space

    # Commented out since these are supplied as env vars in the command-line
    # for the service.

    #-Xms2g
    #-Xmx2g

    ################################################################
    ## Expert settings
    ################################################################
    ##
    ## All settings below this section are considered
    ## expert settings. Don't tamper with them unless
    ## you understand what you are doing
    ##
    ################################################################

    ## GC configuration
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly

    ## optimizations

    # disable calls to System#gc
    -XX:+DisableExplicitGC

    # pre-touch memory pages used by the JVM during initialization
    -XX:+AlwaysPreTouch

    # Detect CGroup memory rather than host memory
    -XX:+UnlockExperimentalVMOptions
    -XX:+UseCGroupMemoryLimitForHeap

    # Memory tracking
    -XX:NativeMemoryTracking=summary

    ## basic

    # force the server VM (remove on 32-bit client JVMs)
    -server

    # explicitly set the stack size (reduce to 320k on 32-bit client JVMs)
    -Xss1m

    # set to headless, just in case
    -Djava.awt.headless=true

    # ensure UTF-8 encoding by default (e.g. filenames)
    -Dfile.encoding=UTF-8

    # use our provided JNA always versus the system one
    -Djna.nosys=true

    # use old-style file permissions on JDK9
    -Djdk.io.permissionsUseCanonicalPath=true

    # flags to keep Netty from being unsafe
    -Dio.netty.noUnsafe=true
    -Dio.netty.noKeySetOptimization=true

    # log4j 2
    -Dlog4j.shutdownHookEnabled=false
    -Dlog4j2.disable.jmx=true
    -Dlog4j.skipJansi=true

    ## heap dumps

    # generate a heap dump when an allocation from the Java heap fails
    # heap dumps are created in the working directory of the JVM
    -XX:+HeapDumpOnOutOfMemoryError

    # specify an alternative path for heap dumps
    # ensure the directory exists and has sufficient space
    #-XX:HeapDumpPath=${heap.dump.path}

    ## GC logging

    #-XX:+PrintGCDetails
    #-XX:+PrintGCTimeStamps
    #-XX:+PrintGCDateStamps
    #-XX:+PrintClassHistogram
    #-XX:+PrintTenuringDistribution
    #-XX:+PrintGCApplicationStoppedTime

    # log GC status to a file with time stamps
    # ensure the directory exists
    #-Xloggc:${loggc}

    # Elasticsearch 5.0.0 will throw an exception on unquoted field names in JSON.
    # If documents were already indexed with unquoted fields in a previous version
    # of Elasticsearch, some operations may throw errors.
    #
    # WARNING: This option will be removed in Elasticsearch 6.0.0 and is provided
    # only for migration purposes.
    #-Delasticsearch.json.allow_unquoted_field_names=true
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: es-config
  selfLink: /api/v1/namespaces//configmaps/es-config

